// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ApiDetailsPage correctly with apiItem 1`] = `
<main
  className="container"
  id="content"
>
  <article>
    <div
      className="row"
    >
      <div
        className="col-12 col-lg-8 offset-lg-4"
      >
        <SideEffect(DocumentMeta)
          description="Provides a basic search api against the National Data Directory of Norway"
          title="National Data Directory Search API"
        />
        <HarvestDate
          harvest={null}
        />
        <SearchHitHeader
          provenance={null}
          publisher={null}
          publisherItems={null}
          publisherLabel="Provider:"
          tag="h1"
          theme={null}
          title="National Data Directory Search API"
          titleLink={null}
        />
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-12 col-lg-4 "
      >
        <StickyMenu
          menuItems={
            Array [
              Object {
                "name": "Description",
                "prefLabel": "Description",
              },
              Object {
                "name": "Operations",
                "prefLabel": "Operations",
              },
              Object {
                "name": "Contact information",
                "prefLabel": "Contact information",
              },
            ]
          }
        />
      </div>
      <section
        className="col-12 col-lg-8 mt-3"
        style={
          Object {
            "marginBottom": "400px",
          }
        }
      >
        <ShowMore
          contentHtml="Provides a basic search api against the National Data Directory of Norway"
          label="Description"
          showLessButtonText="Show less"
          showMoreButtonText="Show the full description"
        />
        <ApiEndpoints
          apiDocUrl={null}
          apiSpecUrl={null}
          name="Operations"
          paths={
            Object {
              "/aggregateDataset": Object {
                "get": Object {
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/catalogs": Object {
                "get": Object {
                  "description": "The three formats are: text/turtle, application/ld+json and application/rdf+xml",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/catalogs/datasets": Object {
                "get": Object {
                  "description": "The three formats are: text/turtle, application/ld+json and application/rdf+xml",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/datasets": Object {
                "get": Object {
                  "description": "Returns a list of matching datasets wrapped in a elasticsearch response. Max number returned by a single query is 100. Size parameters greater than 100 will not return more than 100 datasets. In order to access all datasets, use multiple queries and increment from parameter.",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/datasets/**": Object {
                "get": Object {
                  "description": "You must specify the dataset's identifier",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/harvest/catalog": Object {
                "get": Object {
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/publisher": Object {
                "get": Object {
                  "description": "Returns the elasticsearch response with matching publishers",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/publisher/hierarchy": Object {
                "get": Object {
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
              "/terms": Object {
                "get": Object {
                  "description": "Returns the elasticsearch response with matching terms (dct:subject)",
                  "responses": Object {
                    "200": Object {
                      "description": "OK",
                    },
                    "401": Object {
                      "description": "Unauthorized",
                    },
                    "403": Object {
                      "description": "Forbidden",
                    },
                    "404": Object {
                      "description": "Not Found",
                    },
                  },
                },
              },
            }
          }
        />
        <ListType1
          title="Contact information"
        >
          <React.Fragment
            key="https://fellesdatakatalog.brreg.no"
          >
            <React.Fragment>
              <TwoColRow
                col1="Contact point"
                col2={
                  <a
                    href="https://fellesdatakatalog.brreg.no"
                  >
                    Brønnøysundregistrene
                    <i
                      className="fa fa-external-link fdk-fa-right"
                    />
                  </a>
                }
              />
              <hr />
            </React.Fragment>
            <React.Fragment>
              <TwoColRow
                col1="Email"
                col2={
                  <a
                    href="mailto:fellesdatakatalog@brreg.no"
                    rel="noopener noreferrer"
                    title="fellesdatakatalog@brreg.no"
                  >
                    fellesdatakatalog@brreg.no
                  </a>
                }
              />
              <hr />
            </React.Fragment>
          </React.Fragment>
        </ListType1>
      </section>
    </div>
  </article>
</main>
`;

exports[`should render ApiDetailsPage correctly with missing api-properties 1`] = `
<main
  className="container"
  id="content"
>
  <article>
    <div
      className="row"
    >
      <div
        className="col-12 col-lg-8 offset-lg-4"
      >
        <SideEffect(DocumentMeta)
          description={null}
          title={null}
        />
        <HarvestDate
          harvest={null}
        />
        <SearchHitHeader
          provenance={null}
          publisher={null}
          publisherItems={null}
          publisherLabel="Provider:"
          tag="h1"
          theme={null}
          title={null}
          titleLink={null}
        />
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-12 col-lg-4 "
      >
        <StickyMenu
          menuItems={Array []}
        />
      </div>
      <section
        className="col-12 col-lg-8 mt-3"
        style={
          Object {
            "marginBottom": "400px",
          }
        }
      />
    </div>
  </article>
</main>
`;

exports[`should render ApiDetailsPage correctly with no apiItem 1`] = `""`;
